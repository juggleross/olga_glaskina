# Scaffolding generated by Casein v5.1.1.5

module Casein
  class ArtistsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Artists'
  		@artists = Artist.order(sort_order(:full_name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View artist'
      @artist = Artist.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new artist'
    	@artist = Artist.new
    end

    def create
      @artist = Artist.new artist_params
    
      if @artist.save
        flash[:notice] = 'Artist created'
        redirect_to casein_artists_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new artist'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update artist'
      
      @artist = Artist.find params[:id]
    
      if @artist.update_attributes artist_params
        flash[:notice] = 'Artist has been updated'
        redirect_to casein_artists_path
      else
        flash.now[:warning] = 'There were problems when trying to update this artist'
        render :action => :show
      end
    end
 
    def destroy
      @artist = Artist.find params[:id]

      @artist.destroy
      flash[:notice] = 'Artist has been deleted'
      redirect_to casein_artists_path
    end
  
    private
      
      def artist_params
        params.require(:artist).permit(:full_name, :short_name, :image_cloud)
      end

  end
end